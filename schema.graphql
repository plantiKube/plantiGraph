type Query {
    exampleLambda(exampleStringInput: String!): String! @lambda
}

type Mutation {
    ingestQR(qr: String!): String! @lambda
}

type DeploymentMap {
    modules: [Module]
}

type Module {
    id: ID!
    shelves: [Shelf]
    totalNumberOfSites: Int! @lambda
}

type Shelf {
    sites: [Site]
}

type Site {
    id: ID!
    ocupant: Plant
}

type Plant {
    id: ID!
    xid: String
    cropName: String! @search
    repeater: Boolean! @search
    nutrientType: String! @search
    germinatedDate: DateTime
    transferredDate: DateTime
    harvestedDate: DateTime
}

# Abstract meta parameters for a crop.
type Crop {
    id: ID!
    xid: String
    name: String!
    required_module_type: String!
    repeater: Boolean!
    days_harvestable: Int!
    days_from_transfer_to_first_harvest: Int!
    harvests_per_week: Int!
}

type Seed {
    qr: String!
}

type Drawer {
    gridLocation: Location!
    cropAssignment: Crop
    stock: Int
}

type Location {
    x: Int!
    y: Int!
}

type GerminationTray {
    sitesAvailable: Int!
}
